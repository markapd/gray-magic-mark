{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/cody/MarkTraining/mark-magic-sample/pages/index.js\";\nimport React, { useEffect, useState, useCallback } from 'react'; // import ReactMarkdown from 'react-markdown'\n// import ReactDom from 'react-dom'\n\nimport remarkGfm from 'remark-gfm';\nimport matter from 'gray-matter';\nimport Router from 'next/router';\nimport { magic } from '../magic';\nimport Loading from '../components/loading';\nexport default function Index() {\n  const {\n    0: userMetadata,\n    1: setUserMetadata\n  } = useState();\n  useEffect(() => {\n    // On mount, we check if a user is logged in.\n    // If so, we'll retrieve the authenticated user's profile.\n    magic.user.isLoggedIn().then(magicIsLoggedIn => {\n      if (magicIsLoggedIn) {\n        magic.user.getMetadata().then(setUserMetadata);\n      } else {\n        // If no user is logged in, redirect to `/login`\n        Router.push('/login');\n      }\n    });\n  }, []);\n  /**\n   * Perform logout action via Magic.\n   */\n\n  const logout = useCallback(() => {\n    magic.user.logout().then(() => {\n      Router.push('/login');\n    });\n  }, [Router]); // console.log(userMetadata)\n  // console.log('dfdff')\n\n  console.log(matter('---\\ntitle: Front Matter\\n---\\nThis is content.'));\n  return userMetadata ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Current user: \", userMetadata.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(userMetadata)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/cody/MarkTraining/mark-magic-sample/pages/index.js"],"names":["React","useEffect","useState","useCallback","remarkGfm","matter","Router","magic","Loading","Index","userMetadata","setUserMetadata","user","isLoggedIn","then","magicIsLoggedIn","getMetadata","push","logout","console","log","email","JSON","stringify"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD,C,CACA;AACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCT,QAAQ,EAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACAM,IAAAA,KAAK,CAACK,IAAN,CAAWC,UAAX,GAAwBC,IAAxB,CAA8BC,eAAD,IAAqB;AAChD,UAAIA,eAAJ,EAAqB;AACnBR,QAAAA,KAAK,CAACK,IAAN,CAAWI,WAAX,GAAyBF,IAAzB,CAA8BH,eAA9B;AACD,OAFD,MAEO;AACL;AACAL,QAAAA,MAAM,CAACW,IAAP,CAAY,QAAZ;AACD;AACF,KAPD;AAQD,GAXQ,EAWN,EAXM,CAAT;AAaA;AACF;AACA;;AACE,QAAMC,MAAM,GAAGf,WAAW,CAAC,MAAM;AAC/BI,IAAAA,KAAK,CAACK,IAAN,CAAWM,MAAX,GAAoBJ,IAApB,CAAyB,MAAM;AAC7BR,MAAAA,MAAM,CAACW,IAAP,CAAY,QAAZ;AACD,KAFD;AAGD,GAJyB,EAIvB,CAACX,MAAD,CAJuB,CAA1B,CAnB8B,CAyB9B;AACA;;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYf,MAAM,CAAC,iDAAD,CAAlB;AAEA,SAAOK,YAAY,gBACjB;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA,mCAAmBA,YAAY,CAACW,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEH,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBACGI,IAAI,CAACC,SAAL,CAAeb,YAAf;AADH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADiB,gBASjB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UATF;AAWD","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\n// import ReactMarkdown from 'react-markdown'\n// import ReactDom from 'react-dom'\nimport remarkGfm from 'remark-gfm'\nimport matter from 'gray-matter'\nimport Router from 'next/router';\nimport { magic } from '../magic';\nimport Loading from '../components/loading';\n\nexport default function Index() {\n  const [userMetadata, setUserMetadata] = useState();\n\n  useEffect(() => {\n    // On mount, we check if a user is logged in.\n    // If so, we'll retrieve the authenticated user's profile.\n    magic.user.isLoggedIn().then((magicIsLoggedIn) => {\n      if (magicIsLoggedIn) {\n        magic.user.getMetadata().then(setUserMetadata);\n      } else {\n        // If no user is logged in, redirect to `/login`\n        Router.push('/login');\n      }\n    });\n  }, []);\n\n  /**\n   * Perform logout action via Magic.\n   */\n  const logout = useCallback(() => {\n    magic.user.logout().then(() => {\n      Router.push('/login');\n    });\n  }, [Router]);\n\n  // console.log(userMetadata)\n  // console.log('dfdff')\n  console.log(matter('---\\ntitle: Front Matter\\n---\\nThis is content.'));\n\n  return userMetadata ? (\n    <div className='container'>\n      <h1>Current user: {userMetadata.email}</h1>\n      <button onClick={logout}>Logout</button>\n      <div>\n        {JSON.stringify(userMetadata)}\n      </div>\n    </div>\n  ) : (\n    <Loading />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
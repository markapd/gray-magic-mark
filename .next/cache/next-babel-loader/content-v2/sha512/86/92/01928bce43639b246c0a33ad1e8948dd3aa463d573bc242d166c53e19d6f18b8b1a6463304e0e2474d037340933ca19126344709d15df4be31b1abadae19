{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/cody/MarkTraining/mark-magic-sample/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/cody/MarkTraining/mark-magic-sample/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/cody/MarkTraining/mark-magic-sample/pages/login.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nimport Router from 'next/router';\nimport { magic } from '../magic';\nexport default function Login() {\n  _s();\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoggingIn = _useState2[0],\n      setIsLoggingIn = _useState2[1];\n  /**\n   * Perform login action via Magic's passwordless flow. Upon successuful\n   * completion of the login flow, a user is redirected to the homepage.\n   */\n\n\n  var login = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var didToken, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoggingIn(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return magic.auth.loginWithMagicLink({\n              email: email,\n              redirectURI: new URL('/callback', window.location.origin).href\n            });\n\n          case 4:\n            didToken = _context.sent;\n            _context.next = 7;\n            return fetch('/api/login', {\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + didToken\n              }\n            });\n\n          case 7:\n            res = _context.sent;\n            res.status === 200 && Router.push('/');\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            setIsLoggingIn(false);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 11]]);\n  })), [email]);\n  /**\n   * Saves the value of our email input into component state.\n   */\n\n  var handleInputOnChange = useCallback(function (event) {\n    setEmail(event.target.value);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please sign up or login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      required: \"required\",\n      placeholder: \"Enter your email\",\n      onChange: handleInputOnChange,\n      disabled: isLoggingIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: login,\n      disabled: isLoggingIn,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"brn2q2zky00J/o+Y6Boj1GujCzY=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/cody/MarkTraining/mark-magic-sample/pages/login.js"],"names":["useCallback","useState","Router","magic","Login","email","setEmail","isLoggingIn","setIsLoggingIn","login","auth","loginWithMagicLink","redirectURI","URL","window","location","origin","href","didToken","fetch","headers","Authorization","res","status","push","handleInputOnChange","event","target","value"],"mappings":";;;;;;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,KAAT,QAAsB,UAAtB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA,kBACJH,QAAQ,CAAC,EAAD,CADJ;AAAA,MACvBI,KADuB;AAAA,MAChBC,QADgB;;AAAA,mBAEQL,QAAQ,CAAC,KAAD,CAFhB;AAAA,MAEvBM,WAFuB;AAAA,MAEVC,cAFU;AAI9B;AACF;AACA;AACA;;;AACE,MAAMC,KAAK,GAAGT,WAAW,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBQ,YAAAA,cAAc,CAAC,IAAD,CAAd;AADwB;AAAA;AAAA,mBAKCL,KAAK,CAACO,IAAN,CAAWC,kBAAX,CAA8B;AACnDN,cAAAA,KAAK,EAALA,KADmD;AAEnDO,cAAAA,WAAW,EAAE,IAAIC,GAAJ,CAAQ,WAAR,EAAqBC,MAAM,CAACC,QAAP,CAAgBC,MAArC,EAA6CC;AAFP,aAA9B,CALD;;AAAA;AAKhBC,YAAAA,QALgB;AAAA;AAAA,mBAWJC,KAAK,CAAC,YAAD,EAAe;AACpCC,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT;AAEPC,gBAAAA,aAAa,EAAE,YAAYH;AAFpB;AAD2B,aAAf,CAXD;;AAAA;AAWhBI,YAAAA,GAXgB;AAiBtBA,YAAAA,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBrB,MAAM,CAACsB,IAAP,CAAY,GAAZ,CAAtB;AAjBsB;AAAA;;AAAA;AAAA;AAAA;AAmBtBhB,YAAAA,cAAc,CAAC,KAAD,CAAd;;AAnBsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAqBtB,CAACH,KAAD,CArBsB,CAAzB;AAuBA;AACF;AACA;;AACE,MAAMoB,mBAAmB,GAAGzB,WAAW,CAAC,UAAC0B,KAAD,EAAW;AACjDpB,IAAAA,QAAQ,CAACoB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAFsC,EAEpC,EAFoC,CAAvC;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,QAAQ,EAAC,UAHX;AAIE,MAAA,WAAW,EAAC,kBAJd;AAKE,MAAA,QAAQ,EAAEH,mBALZ;AAME,MAAA,QAAQ,EAAElB;AANZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AAAQ,MAAA,OAAO,EAAEE,KAAjB;AAAwB,MAAA,QAAQ,EAAEF,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAtDuBH,K;;KAAAA,K","sourcesContent":["import { useCallback, useState } from 'react';\nimport Router from 'next/router';\nimport { magic } from '../magic';\n\nexport default function Login() {\n  const [email, setEmail] = useState('');\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\n\n  /**\n   * Perform login action via Magic's passwordless flow. Upon successuful\n   * completion of the login flow, a user is redirected to the homepage.\n   */\n  const login = useCallback(async () => {\n    setIsLoggingIn(true);\n\n    try {\n      // Grab auth token from loginWithMagicLink\n      const didToken = await magic.auth.loginWithMagicLink({\n        email,\n        redirectURI: new URL('/callback', window.location.origin).href,\n      });\n\n      // Validate auth token with server\n      const res = await fetch('/api/login', {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + didToken,\n        },\n      });\n      res.status === 200 && Router.push('/');\n    } catch {\n      setIsLoggingIn(false);\n    }\n  }, [email]);\n\n  /**\n   * Saves the value of our email input into component state.\n   */\n  const handleInputOnChange = useCallback((event) => {\n    setEmail(event.target.value);\n  }, []);\n\n  return (\n    <div className='container'>\n      <h1>Please sign up or login</h1>\n      <input\n        type='email'\n        name='email'\n        required='required'\n        placeholder='Enter your email'\n        onChange={handleInputOnChange}\n        disabled={isLoggingIn}\n      />\n      <button onClick={login} disabled={isLoggingIn}>\n        Send\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
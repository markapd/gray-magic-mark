{"ast":null,"code":"import _defineProperty from \"/Users/cody/MarkTraining/mark-magic-sample/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/cody/MarkTraining/mark-magic-sample/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/cody/MarkTraining/mark-magic-sample/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/cody/MarkTraining/mark-magic-sample/pages/login.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nimport Router from 'next/router';\nimport { Magic, RPCError, RPCErrorCode } from \"magic-sdk\";\nimport { magic } from '../magic';\nexport default function Login() {\n  _s();\n\n  var _jsxDEV2;\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoggingIn = _useState2[0],\n      setIsLoggingIn = _useState2[1];\n\n  var _useState3 = useState(''),\n      sms = _useState3[0],\n      setSms = _useState3[1];\n\n  console.log(sms);\n  /**\n   * Perform login action via Magic's passwordless flow. Upon successuful\n   * completion of the login flow, a user is redirected to the homepage.\n   * \n   \n   */\n\n  function loginSms() {\n    return _loginSms.apply(this, arguments);\n  }\n\n  function _loginSms() {\n    _loginSms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var m;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              m = new Magic('pk_live_BA27AD13D51DA6FB');\n              _context2.prev = 1;\n              _context2.next = 4;\n              return m.auth.loginWithSMS({\n                phoneNumber: sms\n              });\n\n            case 4:\n              _context2.next = 18;\n              break;\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](1);\n\n              if (!(_context2.t0 instanceof RPCError)) {\n                _context2.next = 18;\n                break;\n              }\n\n              _context2.t1 = _context2.t0.code;\n              _context2.next = _context2.t1 === RPCErrorCode.MagicLinkFailedVerification ? 12 : _context2.t1 === RPCErrorCode.MagicLinkExpired ? 13 : _context2.t1 === RPCErrorCode.MagicLinkRateLimited ? 14 : _context2.t1 === RPCErrorCode.MagicLinkInvalidRedirectURL ? 15 : _context2.t1 === RPCErrorCode.UserAlreadyLoggedIn ? 16 : 18;\n              break;\n\n            case 12:\n              console.log(_context2.t0);\n\n            case 13:\n              console.log(_context2.t0);\n\n            case 14:\n              console.log(_context2.t0);\n\n            case 15:\n              console.log(_context2.t0);\n\n            case 16:\n              console.log(_context2.t0);\n              return _context2.abrupt(\"break\", 18);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 6]]);\n    }));\n    return _loginSms.apply(this, arguments);\n  }\n\n  var login = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var didToken, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoggingIn(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return magic.auth.loginWithMagicLink({\n              email: email,\n              redirectURI: new URL('/callback', window.location.origin).href\n            });\n\n          case 4:\n            didToken = _context.sent;\n            _context.next = 7;\n            return fetch('/api/login', {\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + didToken\n              }\n            });\n\n          case 7:\n            res = _context.sent;\n            res.status === 200 && Router.push('/');\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            setIsLoggingIn(false);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 11]]);\n  })), [email]);\n  /**\n   * Saves the value of our email input into component state.\n   */\n\n  var handleInputOnChange = useCallback(function (event) {\n    setEmail(event.target.value);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please sign up or login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      required: \"required\",\n      placeholder: \"Enter your email\",\n      onChange: handleInputOnChange,\n      disabled: isLoggingIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: login,\n      disabled: isLoggingIn,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", (_jsxDEV2 = {\n      onChange: function onChange(e) {\n        return setSms(e.target.value);\n      },\n      name: \"phone\",\n      type: \"tel\"\n    }, _defineProperty(_jsxDEV2, \"name\", \"phone\"), _defineProperty(_jsxDEV2, \"required\", \"required\"), _defineProperty(_jsxDEV2, \"placeholder\", \"Enter your phone #\"), _jsxDEV2), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loginSms,\n      type: \"submit\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"EZsIpJxVPr7dqOORRbpW1OkFd4U=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/cody/MarkTraining/mark-magic-sample/pages/login.js"],"names":["useCallback","useState","Router","Magic","RPCError","RPCErrorCode","magic","Login","email","setEmail","isLoggingIn","setIsLoggingIn","sms","setSms","console","log","loginSms","m","auth","loginWithSMS","phoneNumber","code","MagicLinkFailedVerification","MagicLinkExpired","MagicLinkRateLimited","MagicLinkInvalidRedirectURL","UserAlreadyLoggedIn","login","loginWithMagicLink","redirectURI","URL","window","location","origin","href","didToken","fetch","headers","Authorization","res","status","push","handleInputOnChange","event","target","value","e"],"mappings":";;;;;;;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,YAA1B,QAA8C,WAA9C;AACA,SAASC,KAAT,QAAsB,UAAtB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA;;AAAA,kBACJN,QAAQ,CAAC,EAAD,CADJ;AAAA,MACvBO,KADuB;AAAA,MAChBC,QADgB;;AAAA,mBAEQR,QAAQ,CAAC,KAAD,CAFhB;AAAA,MAEvBS,WAFuB;AAAA,MAEVC,cAFU;;AAAA,mBAGRV,QAAQ,CAAC,EAAD,CAHA;AAAA,MAGvBW,GAHuB;AAAA,MAGlBC,MAHkB;;AAIhCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACE;AACF;AACA;AACA;AACA;AACA;;AAVgC,WAYdI,QAZc;AAAA;AAAA;;AAAA;AAAA,yEAY7B;AAAA;AAAA;AAAA;AAAA;AAAA;AACOC,cAAAA,CADP,GACW,IAAId,KAAJ,CAAU,0BAAV,CADX;AAAA;AAAA;AAAA,qBAGSc,CAAC,CAACC,IAAF,CAAOC,YAAP,CAAoB;AAAEC,gBAAAA,WAAW,EAAER;AAAf,eAApB,CAHT;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,oBAKO,wBAAeR,QALtB;AAAA;AAAA;AAAA;;AAAA,6BAMa,aAAIiB,IANjB;AAAA,gDAOYhB,YAAY,CAACiB,2BAPzB,yBASYjB,YAAY,CAACkB,gBATzB,yBAWYlB,YAAY,CAACmB,oBAXzB,yBAaYnB,YAAY,CAACoB,2BAbzB,yBAeYpB,YAAY,CAACqB,mBAfzB;AAAA;;AAAA;AAQSZ,cAAAA,OAAO,CAACC,GAAR;;AART;AAUSD,cAAAA,OAAO,CAACC,GAAR;;AAVT;AAYSD,cAAAA,OAAO,CAACC,GAAR;;AAZT;AAcSD,cAAAA,OAAO,CAACC,GAAR;;AAdT;AAgBSD,cAAAA,OAAO,CAACC,GAAR;AAhBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAZ6B;AAAA;AAAA;;AAmC9B,MAAMY,KAAK,GAAG3B,WAAW,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBW,YAAAA,cAAc,CAAC,IAAD,CAAd;AADwB;AAAA;AAAA,mBAICL,KAAK,CAACY,IAAN,CAAWU,kBAAX,CAA8B;AACnDpB,cAAAA,KAAK,EAALA,KADmD;AAEnDqB,cAAAA,WAAW,EAAE,IAAIC,GAAJ,CAAQ,WAAR,EAAqBC,MAAM,CAACC,QAAP,CAAgBC,MAArC,EAA6CC;AAFP,aAA9B,CAJD;;AAAA;AAIhBC,YAAAA,QAJgB;AAAA;AAAA,mBASJC,KAAK,CAAC,YAAD,EAAe;AACpCC,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT;AAEPC,gBAAAA,aAAa,EAAE,YAAYH;AAFpB;AAD2B,aAAf,CATD;;AAAA;AAShBI,YAAAA,GATgB;AAetBA,YAAAA,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBtC,MAAM,CAACuC,IAAP,CAAY,GAAZ,CAAtB;AAfsB;AAAA;;AAAA;AAAA;AAAA;AAiBtB9B,YAAAA,cAAc,CAAC,KAAD,CAAd;;AAjBsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAmBtB,CAACH,KAAD,CAnBsB,CAAzB;AAqBA;AACF;AACA;;AACE,MAAMkC,mBAAmB,GAAG1C,WAAW,CAAC,UAAC2C,KAAD,EAAW;AACjDlC,IAAAA,QAAQ,CAACkC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAFsC,EAEpC,EAFoC,CAAvC;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,QAAQ,EAAC,UAHX;AAIE,MAAA,WAAW,EAAC,kBAJd;AAKE,MAAA,QAAQ,EAAEH,mBALZ;AAME,MAAA,QAAQ,EAAEhC;AANZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AAAQ,MAAA,OAAO,EAAEiB,KAAjB;AAAwB,MAAA,QAAQ,EAAEjB,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAcE;AAAO,MAAA,QAAQ,EAAE,kBAACoC,CAAD;AAAA,eAAOjC,MAAM,CAACiC,CAAC,CAACF,MAAF,CAASC,KAAV,CAAb;AAAA,OAAjB;AAAgD,MAAA,IAAI,EAAC,OAArD;AAA6D,MAAA,IAAI,EAAC;AAAlE,yCAA6E,OAA7E,yCAA8F,UAA9F,4CAAqH,oBAArH;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE;AAAQ,MAAA,OAAO,EAAE7B,QAAjB;AAA2B,MAAA,IAAI,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAlFuBT,K;;KAAAA,K","sourcesContent":["import { useCallback, useState } from 'react';\nimport Router from 'next/router';\nimport { Magic, RPCError, RPCErrorCode } from \"magic-sdk\"\nimport { magic } from '../magic';\n\nexport default function Login() {\n  const [email, setEmail] = useState('');\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\n  const [sms, setSms] = useState('')\nconsole.log(sms)\n  /**\n   * Perform login action via Magic's passwordless flow. Upon successuful\n   * completion of the login flow, a user is redirected to the homepage.\n   * \n   \n   */\n\n   async function loginSms() {\n    const m = new Magic('pk_live_BA27AD13D51DA6FB')\n    try {\n      await m.auth.loginWithSMS({ phoneNumber: sms })\n    } catch (err) {\n      if (err instanceof RPCError) {\n        switch (err.code) {\n          case RPCErrorCode.MagicLinkFailedVerification:\n            console.log(err)\n          case RPCErrorCode.MagicLinkExpired:\n            console.log(err)\n          case RPCErrorCode.MagicLinkRateLimited:\n            console.log(err)\n          case RPCErrorCode.MagicLinkInvalidRedirectURL:\n            console.log(err)\n          case RPCErrorCode.UserAlreadyLoggedIn:\n            console.log(err)\n            break\n        }\n      }\n    }\n  }\n\n  const login = useCallback(async () => {\n    setIsLoggingIn(true);\n\n    try {\n      const didToken = await magic.auth.loginWithMagicLink({\n        email,\n        redirectURI: new URL('/callback', window.location.origin).href,\n      });\n\n      const res = await fetch('/api/login', {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + didToken,\n        },\n      });\n      res.status === 200 && Router.push('/');\n    } catch {\n      setIsLoggingIn(false);\n    }\n  }, [email]);\n\n  /**\n   * Saves the value of our email input into component state.\n   */\n  const handleInputOnChange = useCallback((event) => {\n    setEmail(event.target.value);\n  }, []);\n\n  return (\n    <div className='container'>\n      <h1>Please sign up or login</h1>\n      <input\n        type='email'\n        name='email'\n        required='required'\n        placeholder='Enter your email'\n        onChange={handleInputOnChange}\n        disabled={isLoggingIn}\n      />\n      <button onClick={login} disabled={isLoggingIn}>\n        Send\n      </button>\n      \n      <input onChange={(e) => setSms(e.target.value)} name=\"phone\" type=\"tel\" name=\"phone\" required=\"required\" placeholder=\"Enter your phone #\" />\n      <button onClick={loginSms} type=\"submit\">Send</button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
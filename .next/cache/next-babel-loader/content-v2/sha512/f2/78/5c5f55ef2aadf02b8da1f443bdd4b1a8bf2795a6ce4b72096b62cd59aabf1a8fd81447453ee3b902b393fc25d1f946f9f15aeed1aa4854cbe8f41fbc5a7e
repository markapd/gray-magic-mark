{"ast":null,"code":"// import fs from 'fs'\n// import path from 'path'\n// import matter from 'gray-matter'\n// const postsDirectory = path.join(process.cwd(), 'posts')\n// export function getSortedPostsData() {\n//   // Get file names under /posts\n//   const fileNames = fs.readdirSync(postsDirectory)\n//   const allPostsData = fileNames.map(fileName => {\n//     // Remove \".md\" from file name to get id\n//     const id = fileName.replace(/\\.md$/, '')\n//     // Read markdown file as string\n//     const fullPath = path.join(postsDirectory, fileName)\n//     const fileContents = fs.readFileSync(fullPath, 'utf8')\n//     // Use gray-matter to parse the post metadata section\n//     const matterResult = matter(fileContents)\n//     // Combine the data with the id\n//     return {\n//       id,\n//       ...matterResult.data\n//     }\n//   })\n//   // Sort posts by date\n//   return allPostsData.sort(({ date: a }, { date: b }) => {\n//     if (a < b) {\n//       return 1\n//     } else if (a > b) {\n//       return -1\n//     } else {\n//       return 0\n//     }\n//   })\n// }","map":{"version":3,"sources":["/Users/cody/MarkTraining/mark-magic-sample/lib/posts.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import fs from 'fs'\n// import path from 'path'\n// import matter from 'gray-matter'\n\n// const postsDirectory = path.join(process.cwd(), 'posts')\n\n// export function getSortedPostsData() {\n//   // Get file names under /posts\n//   const fileNames = fs.readdirSync(postsDirectory)\n//   const allPostsData = fileNames.map(fileName => {\n//     // Remove \".md\" from file name to get id\n//     const id = fileName.replace(/\\.md$/, '')\n\n//     // Read markdown file as string\n//     const fullPath = path.join(postsDirectory, fileName)\n//     const fileContents = fs.readFileSync(fullPath, 'utf8')\n\n//     // Use gray-matter to parse the post metadata section\n//     const matterResult = matter(fileContents)\n\n//     // Combine the data with the id\n//     return {\n//       id,\n//       ...matterResult.data\n//     }\n//   })\n//   // Sort posts by date\n//   return allPostsData.sort(({ date: a }, { date: b }) => {\n//     if (a < b) {\n//       return 1\n//     } else if (a > b) {\n//       return -1\n//     } else {\n//       return 0\n//     }\n//   })\n// }"]},"metadata":{},"sourceType":"script"}